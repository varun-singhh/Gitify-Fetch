[{"D:\\React-Clones\\LCO\\appeight\\src\\index.js":"1","D:\\React-Clones\\LCO\\appeight\\src\\App.js":"2","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Home.js":"3","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Signin.js":"4","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Signup.js":"5","D:\\React-Clones\\LCO\\appeight\\src\\Components\\NotFound.js":"6","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Context.js":"7","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Footer.js":"8","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Header.js":"9","D:\\React-Clones\\LCO\\appeight\\src\\Config\\firebaseConfig.js":"10","D:\\React-Clones\\LCO\\appeight\\src\\Components\\UserCard.js":"11","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Repo.js":"12"},{"size":238,"mtime":1612189396274,"results":"13","hashOfConfig":"14"},{"size":1397,"mtime":1612205986028,"results":"15","hashOfConfig":"14"},{"size":1917,"mtime":1612272174458,"results":"16","hashOfConfig":"14"},{"size":3286,"mtime":1612276792274,"results":"17","hashOfConfig":"14"},{"size":3296,"mtime":1612276860468,"results":"18","hashOfConfig":"14"},{"size":324,"mtime":1612269582421,"results":"19","hashOfConfig":"14"},{"size":91,"mtime":1612191113896,"results":"20","hashOfConfig":"14"},{"size":388,"mtime":1612207219810,"results":"21","hashOfConfig":"14"},{"size":2626,"mtime":1612275194780,"results":"22","hashOfConfig":"14"},{"size":340,"mtime":1612196654680,"results":"23","hashOfConfig":"14"},{"size":640,"mtime":1612272557537,"results":"24","hashOfConfig":"14"},{"size":1235,"mtime":1612270550261,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1qa56xd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"D:\\React-Clones\\LCO\\appeight\\src\\index.js",[],["60","61"],"D:\\React-Clones\\LCO\\appeight\\src\\App.js",["62","63"],"import React, { useState } from 'react'\nimport './Components/Styles/App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\"\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport Home from './Components/Home';\nimport Signin from './Components/Signin';\nimport Signup from './Components/Signup';\nimport NotFound from './Components/NotFound';\nimport Context from './Components/Context';\nimport Footer from './Components/Footer';\nimport Header from './Components/Header';\nimport firebaseConfig from \"./Config/firebaseConfig\"\nimport { toast } from 'react-toastify';\nfirebase.initializeApp(firebaseConfig)\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  return (\n    <Router>\n\n      <ToastContainer \n      position=\"top-center\"\n      autoClose={2000}\n      hideProgressBar/>\n      \n      <Context.Provider value={{ user, setUser }}>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"*\" component={NotFound} />\n        </Switch>\n        <Footer/>\n      </Context.Provider>\n    </Router>\n  )\n}\n\nexport default App\n","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Home.js",[],"D:\\React-Clones\\LCO\\appeight\\src\\Components\\Signin.js",["64","65"],"import React, { useContext, useState } from 'react'\r\nimport {\r\n    Container, Form, FormGroup, Button, Row, Col, Input, Card, CardBody, CardFooter, CardHeader, Label\r\n} from \"reactstrap\"\r\nimport firebase from \"firebase/app\";\r\nimport Context from './Context';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport Head from \"react-document-configuration\";\r\nimport logo from \"./Styles/git.webp\"\r\nimport \"./Styles/Signin.css\"\r\nconst Signin = () => {\r\n    const userContext = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const handleSignup = () => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, pass)\r\n            .then(res=>{\r\n                userContext.setUser({ email: res.user.email, uid: res.user.uid })\r\n                toast(\"Logged IN\", {\r\n                    type: \"success\"\r\n                })\r\n            })\r\n            .catch(error => {\r\n                toast(error.message, {\r\n                    type: \"error\"\r\n                })\r\n            })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        handleSignup()\r\n    }\r\n    if (userContext.user?.uid) {\r\n        \r\n        return <Redirect to=\"/\" />\r\n    }\r\n    else {\r\n        return (\r\n            <Container className=\"text-center\" >\r\n                <Head title=\"Gitify.fetch | Login\"  icon={logo} />\r\n                <Row>\r\n                    <Col l={6} className=\"offset-rg-1 mt-5\" >\r\n                        <Card className=\"signin-container\">\r\n                            <Form onSubmit={handleSubmit}>\r\n                            <CardHeader className=\"signin-f\"><h2>Gitify.fetch | Login</h2></CardHeader>\r\n                                <CardBody>\r\n                                    <FormGroup row >\r\n                                        <Label for=\"email\" sm={3}>Email</Label>\r\n                                        <Col sm={6}>\r\n                                            <Input className=\"form\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter your Mail\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row >\r\n                                        <Label for=\"password\" sm={3}>Password</Label>\r\n                                        <Col sm={6}>\r\n                                            <Input className=\"form\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your Password\" value={pass} onChange={e => setPass(e.target.value)} />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                                <CardFooter className=\"signin-f\">\r\n                                    <Button type=\"submit\" className=\"button-log\">Login</Button>\r\n                                </CardFooter>\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin\r\n","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Signup.js",["66","67"],"import React, { useContext, useState } from 'react'\r\nimport {\r\n    Container, Form, FormGroup, Button, Row, Col, Input, Card, CardBody, CardFooter, CardHeader, Label\r\n} from \"reactstrap\"\r\nimport firebase from \"firebase/app\";\r\nimport Context from './Context';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport Head from \"react-document-configuration\";\r\nimport logo from \"./Styles/git.webp\"\r\nimport \"./Styles/Signup.css\"\r\nconst Signup = () => {\r\n    const userContext = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const handleSignup = () => {\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, pass)\r\n            .then(res=>{\r\n                userContext.setUser({ email: res.user.email, uid: res.user.uid })\r\n                toast(\"Account created Successfully!!\", {\r\n                    type: \"success\"\r\n                })\r\n            })\r\n            .catch(error => {\r\n                toast(error.message, {\r\n                    type: \"error\"\r\n                })\r\n            })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        handleSignup()\r\n    }\r\n    if (userContext.user?.uid) {\r\n        \r\n        return <Redirect to=\"/\"  />\r\n    }\r\n    else {\r\n        return (\r\n            <Container className=\"text-center\">\r\n                <Head title=\"Gitify.fetch | Signup\"  icon={logo} />\r\n                <Row>\r\n                <Col l={6} className=\"offset-rg-1 mt-5\">\r\n                        <Card className=\"signin-container\">\r\n                            <Form onSubmit={handleSubmit}>\r\n                            <CardHeader className=\"signin-f\"><h2>Gitify.fetch | Signup</h2></CardHeader>\r\n                                <CardBody>\r\n                                    <FormGroup row >\r\n                                        <Label for=\"email\" sm={3}>Email</Label>\r\n                                        <Col sm={6}>\r\n                                            <Input className=\"form\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter your Mail\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row >\r\n                                        <Label for=\"password\" sm={3}>Password</Label>\r\n                                        <Col sm={6}>\r\n                                            <Input className=\"form\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your Password\" value={pass} onChange={e => setPass(e.target.value)} />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                                <CardFooter className=\"signin-f\">\r\n                                    <Button type=\"submit\" className=\"button-log\">Sign Up</Button>\r\n                                </CardFooter>\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup\r\n","D:\\React-Clones\\LCO\\appeight\\src\\Components\\NotFound.js",["68"],"import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div style={{display: \"flex\",justifyContent: \"center\", marginTop:\"0px\"}} >\r\n            <img src=\"https://cdn.dribbble.com/users/272763/screenshots/4576659/astronaut-600x800.gif\" width=\"55%\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Context.js",[],"D:\\React-Clones\\LCO\\appeight\\src\\Components\\Footer.js",[],"D:\\React-Clones\\LCO\\appeight\\src\\Components\\Header.js",["69","70","71","72"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, NavbarText } from \"reactstrap\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from './Context';\r\nimport \"./Styles/header.css\"\r\nimport logo from \"./Styles/git.webp\"\r\nimport { toast } from 'react-toastify';\r\nconst Header = () => {\r\n    const userContext = useContext(Context)\r\n    const [open, setOpen] = useState(false)\r\n    const toggle = () => {\r\n        setOpen(!open)\r\n    }\r\n    var s=\"to Gitify.Fetch !!\";\r\n    if(userContext.user?.email)\r\n    {\r\n        var s=\"\";\r\n        for (let i = 0; i < userContext.user.email.length; i++) {\r\n            if(userContext.user.email[i]!=\"@\")\r\n            {\r\n                s+=userContext.user.email[i]\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Navbar light expand=\"md\" className=\"header\">\r\n            <NavbarBrand >\r\n                <Link to=\"/\" className=\"text\"><img src={logo} height=\"60px\"/></Link>\r\n            </NavbarBrand>\r\n            <NavbarText ><div className=\"text\">Welcome, {s}</div></NavbarText>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={open} navbar>\r\n                <Nav className=\"ml-auto\" >\r\n                    {\r\n                        userContext.user ? (\r\n                        <NavItem>\r\n                            <NavLink onClick={()=>{\r\n                                userContext.setUser(null)\r\n                                toast(\"Logged out\", {\r\n                                    type: \"info\"\r\n                                })\r\n                                }} className=\"text\" style={{cursor:\"pointer\"}} >\r\n                                Logout\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        ) : (\r\n                        <>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} to=\"/signup\" className=\"text\">\r\n                                    Signup\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} to=\"/signin\" className=\"text\">\r\n                                    Login\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </>\r\n                            )\r\n                    }\r\n\r\n\r\n\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\React-Clones\\LCO\\appeight\\src\\Config\\firebaseConfig.js",["73"],"export default  {\r\n    apiKey: \"AIzaSyAjhyf5W-jIlUXqxCm9uzyqJx3W7uOhPT8\",\r\n    authDomain: \"gitify-9c97b.firebaseapp.com\",\r\n    projectId: \"gitify-9c97b\",\r\n    storageBucket: \"gitify-9c97b.appspot.com\",\r\n    messagingSenderId: \"569095345196\",\r\n    appId: \"1:569095345196:web:36d5971de09f8b0df56d89\",\r\n    measurementId: \"G-M24PYPJ58N\"\r\n};\r\n","D:\\React-Clones\\LCO\\appeight\\src\\Components\\UserCard.js",["74"],"import React from 'react'\r\nimport {CardBody,Card} from \"reactstrap\"\r\nimport \"./Styles/UserCard.css\"\r\nconst UserCard = ({user}) => {\r\n    return (\r\n        <Card className=\"text-left mt-3 mb-4 usercard\">\r\n            <img src={user.avatar_url} className=\"img-thumbnail \"/>\r\n            <CardBody>\r\n                <div className=\" text-center heading\"><h3>{user.name}</h3></div>\r\n                <div >Loaction: {user.location}</div>\r\n                <div >Followers: {user.followers}</div>\r\n                <div >Public Repositories: {user.public_repos}</div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserCard\r\n","D:\\React-Clones\\LCO\\appeight\\src\\Components\\Repo.js",["75","76"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from \"axios\"\r\nimport { ListGroup, ListGroupItem } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport \"./Styles/Repo.css\"\r\nconst Repo = ({ repos_url }) => {\r\n    const [repos, setRepos] = useState([])\r\n    const fetchRepo = async () => {\r\n        const { data } = await Axios.get(repos_url)\r\n        setRepos(data)\r\n    }\r\n    const openInNewTab = (url) => {\r\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) newWindow.opener = null\r\n    }\r\n    useEffect(() => { fetchRepo() }, [repos_url])\r\n    return (\r\n        <ListGroup className=\"list\">\r\n            {repos.map(repo => (\r\n                <ListGroupItem key={repo.id} className=\"mb-2 repos\">\r\n                    <div className=\"text-left \" onClick={() => openInNewTab(repo.html_url)} style={{ cursor: \"pointer\" }}>\r\n                        <div><h3 className=\"heading\">{repo.name}</h3></div>\r\n                        <div><h5>{repo.language}</h5></div>\r\n                        <div><p>{repo.description}</p></div>\r\n                    </div>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default Repo\r\n\r\n",["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":50,"nodeType":"85","messageId":"86","endLine":4,"endColumn":54},{"ruleId":"83","severity":1,"message":"87","line":17,"column":10,"nodeType":"85","messageId":"86","endLine":17,"endColumn":15},{"ruleId":"83","severity":1,"message":"88","line":14,"column":12,"nodeType":"85","messageId":"86","endLine":14,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":14,"column":18,"nodeType":"85","messageId":"86","endLine":14,"endColumn":25},{"ruleId":"83","severity":1,"message":"88","line":14,"column":12,"nodeType":"85","messageId":"86","endLine":14,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":14,"column":18,"nodeType":"85","messageId":"86","endLine":14,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":6,"column":13,"nodeType":"92","endLine":6,"endColumn":117},{"ruleId":"83","severity":1,"message":"93","line":1,"column":39,"nodeType":"85","messageId":"86","endLine":1,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":17,"column":13,"nodeType":"85","messageId":"96","endLine":17,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":19,"column":41,"nodeType":"99","messageId":"100","endLine":19,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":31,"column":47,"nodeType":"92","endLine":31,"endColumn":78},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","endLine":9,"endColumn":3},{"ruleId":"90","severity":1,"message":"91","line":7,"column":13,"nodeType":"92","endLine":7,"endColumn":68},{"ruleId":"83","severity":1,"message":"104","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":16,"column":38,"nodeType":"107","endLine":16,"endColumn":49,"suggestions":"108"},{"ruleId":"79","replacedBy":"109"},{"ruleId":"81","replacedBy":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","no-redeclare","'s' is already defined.","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRepo'. Either include it or remove the dependency array.","ArrayExpression",["113"],["111"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [fetchRepo, repos_url]",{"range":"116","text":"117"},[605,616],"[fetchRepo, repos_url]"]